
* {
  box-sizing: border-box;
}



html {
  font-family: Arial, Helvetica, sans-serif;
  height: 100%;
}

body {
	background-color: var(--ColorBackground);
	margin: 0px;
	height: 100%;
}
.noselect {
	-webkit-touch-callout: none; /* iOS Safari */
	-webkit-user-select: none; /* Safari */
	-khtml-user-select: none; /* Konqueror HTML */
	-moz-user-select: none; /* Old versions of Firefox */
	-ms-user-select: none; /* Internet Explorer/Edge */
	user-select: none; /* Non-prefixed version, currently
		supported by Chrome, Edge, Opera and Firefox */
}

.TextCenter {
  text-align: center;
}


/******** Switch sliders style ******/	
        
	.switch {
		position: relative;
		display: inline-block;
		width: 30px;
		height: 20px;
		background-color: var(--ColorBackground);
		border-radius: 5px;	
		border: 1px solid var(--ColorBackground);
	-webkit-tap-highlight-color: transparent; /* for removing the highlight 
		*This only works with certain web browser but useful for Safari and 
		* chrome on mobile touch screens*/

	
	}

	.switch input { 
		opacity: 0;
		width: 0;
		height: 0;
	}

	.slider {
		position: absolute;
		cursor: pointer;
		top: 0;
		left: 0;
		right: 0;
		bottom: 0;
		background-color: var(--ColorSliderBack);
		-webkit-transition: .4s;
		transition: .4s;
	}

	.slider:before {
		position: absolute;
		content: "";
		height: 10px;
		width: 10px;
		left: 3px;
		bottom: 3px;
		background-color: var(--ColorSlider);
		-webkit-transition: .4s;
		transition: .4s;
		border: 1px solid var(--ColorBackground);
	}

input:checked + .switchColorDefault {
	background-color: var(--ColorDefault);
}

input:checked + .switchColorDefaultDisabled {
	background-color: var(--ColorDefaultDisabled);
}

input:checked + .switchColorPink {
	background-color: var(--ColorPink);
}

input:checked + .switchColorPinkDisabled {
	background-color: var(--ColorPinkDisabled);
}

input:checked + .switchColorPurple {
	background-color: var(--ColorPurple);
}

input:checked + .switchColorPurpleDisabled {
	background-color: var(--ColorPurpleDisabled);
}

input:checked + .switchColorYellow {
	background-color: var(--ColorYellow);
}

input:checked + .switchColorYellowDisabled {
	background-color: var(--ColorYellowDisabled);
}

input:checked + .switchColorBlack {
	background-color: var(--ColorBlack);
}

input:checked + .switchColorBlackDisabled {
	background-color: var(--ColorBlackDisabled);
}

input:checked + .switchColorOrange {
	background-color: var(--ColorOrange);
}

input:checked + .switchColorOrangeDisabled {
	background-color: var(--ColorOrangeDisabled);
}

input:checked + .switchColorBlue {
	background-color: var(--ColorBlue);
}

input:checked + .switchColorBlueDisabled {
	background-color: var(--ColorBlueDisabled);
}

input:checked + .switchColorRed {
	background-color: var(--ColorRed);
}

input:checked + .switchColorRedDisabled {
	background-color: var(--ColorRedDisabled);
}

input:checked + .switchColorGreen {
	background-color: var(--ColorGreen);
}

input:checked + .switchColorGreenDisabled {
	background-color: var(--ColorGreenDisabled);
}

	input:focus + .slider {
		box-shadow: 0 0 1px var(--ColorDefault);
	}

	input:checked + .slider:before {
		-webkit-transform: translateX(10px);
		-ms-transform: translateX(10px);
		transform: translateX(10px);
	}

	/* Rounded sliders */
	.slider.round {
		border-radius: 5px;
	}

	.slider.round:before {
		border-radius: 3px;
	}	

	.slider.disabled {
		border-radius: 5px;
		pointer-events: none;
		background-color: var(--ColorSliderBackDisabled);
	}

	.slider.disabled:before {
		background-color: var(--ColorSliderDisabled);
		pointer-events: none;
		border: 1px solid var(--ColorSliderDisabledBorder) !important;
	}	
	
/******** Button style ******/	
.mbutton { 

min-width: 20px;
width: auto;
height: 20px; 
font-family: Arial, Helvetica, sans-serif;
font-size: 18px;
color: var(--ColorMButtonText);
background-color: var(--ColorMButtonBackground);
#margin: 10px;
border-radius: 5px;
box-shadow: inset 2px 2px 10px 2px var(--ColorMButtonBoxShadow);
text-shadow: 1px 1px 0px var(--ColorMButtonTextShadow);
text-align: center;
padding: 5px;  /* iOS text is not centered unless you set padding to zero */


/* display: inline-block; */
border: 1px solid var(--ColorMButtonBorder);
cursor: pointer; /*changes cursor to hand symbol when you hoover*/

-webkit-tap-highlight-color: transparent; /* for removing the highlight 
		*This only works with certain web browser but useful for Safari and 
		* chrome on mobile touch screens*/
	
} 

button:active.mbutton {
	color: var(--ColorMButtonActiveText);
	background-color: var(--ColorBackground);
	border-radius: 15px;
	box-shadow: inset 2px 2px 10px 2px var(--ColorMButtonActiveBoxShadow);
	text-shadow: 1px 1px 0px var(--ColorMButtonActiveTextShadow);
	border: 1px solid var(--ColorMButtonActiveBorder);
}

button.mbutton.disabled { 

/*max-width: 20%; */
min-width: 20px;
width: auto;
height: 20px; 
font-family: Arial, Helvetica, sans-serif;
font-size: 18px;
color: var(--ColorMButtonDisabledText) !important;
background-color: var(--ColorBackground);
#margin: 10px;
border-radius: 5px;
box-shadow: inset 2px 2px 10px 2px var(--ColorMButtonDisabledBoxShadow);
text-shadow: 1px 1px 0px var(--ColorMButtonDisabledTextShadow);
text-align: center;
padding: 5px;  /* iOS text is not centered unless you set padding to zero */
pointer-events: none;

border: 1px solid var(--ColorMButtonDisabledBorder) !important;
cursor: pointer; /*changes cursor to hand symbol when you hoover*/

-webkit-tap-highlight-color: transparent; /* for removing the highlight 
		*This only works with certain web browser but useful for Safari and 
		* chrome on mobile touch screens*/
	
} 

button:active.mbutton.disabled  {
	color: var(--ColorMButtonDisabledActiveText);
	background-color: var(--ColorBackground);
	box-shadow: inset 2px 2px 10px 2px var(--ColorMButtonDisabledActiveBoxShadow);
	text-shadow: 1px 1px 0px var(--ColorMButtonDisabledActiveTextShadow);
	border: 1px solid var(--ColorMButtonDisabledActiveBorder) !important;
	pointer-events: none;
}

/* The following prevents chrome from putting a box around the button
 * after selecting it 
 */
button:focus.mbutton {
    outline: 0;
}

.disabled {
	color: var(--ColorDisabled) !important;
}

.title {
	padding-top: 15px;
	padding-left: 15px;
	padding-bottom: 15px;
	font-size: 20px;
	font-weight: bold;
	color: var(--ColorDefaultTitle);
}

.pinPurple {
	background-image: var(--ImagePin);
	background-color: var(--ColorPurple);
}

.pinPurpleDisabled {
	background-image: var(--ImagePinDisabled);
	background-color: var(--ColorPurpleDisabled);
}

.pinPink {
	background-image: var(--ImagePin);
	background-color: var(--ColorPink);
}

.pinPinkDisabled {
	background-image: var(--ImagePinDisabled);
	background-color: var(--ColorPinkDisabled);
}

.pinYellow {
	background-image: var(--ImagePin);
	background-color: var(--ColorReservedYellow);
}

.pinYellowDisabled {
	background-image: var(--ImagePinDisabled);
	background-color: var(--ColorYellowDisabled);
}

.pinBlack {
	background-image: var(--ImagePin);
	background-color: var(--ColorReservedBlack);
}

.pinBlackDisabled {
	background-image: var(--ImagePinDisabled);
	background-color: var(--ColorBlackDisabled);
}

.pinOrange {
	background-image: var(--ImagePin);
	background-color: var(--ColorReservedOrange);
}

.pinOrangeDisabled {
	background-image: var(--ImagePinDisabled);
	background-color: var(--ColorOrangeDisabled);
}

.pinBlue {
	background-image: var(--ImagePin);
	background-color: var(--ColorBlue);
}

.pinBlueDisabled {
	background-image: var(--ImagePinDisabled);
	background-color: var(--ColorBlueDisabled);
}

.pinRed {
	background-image: var(--ImagePin);
	background-color: var(--ColorReservedRed);
}

.pinRedDisabled {
	background-image: var(--ImagePinDisabled);
	background-color: var(--ColorRedDisabled);
}

.pinGreen {
	background-image: var(--ImagePin);
	background-color: var(--ColorGreen);
}

.pinGreenDisabled {
	background-image: var(--ImagePinDisabled);
	background-color: var(--ColorGreenDisabled);
}

.div-table-border {
	margin: 10px;
}

.div-table {
    width: auto;         
    padding: 0px;
}

.div-table-row {
    width: auto;
    clear: both;
    padding: 0px;
}

.div-table-col {
    float: left; /* fix for  buggy browsers */
    height: 30px;
	padding-top: 5px;
}

.div-table-col-border-left {
	padding-left: 5px;
}

.div-table-col-text-left {
    width: 73px;  
	padding-right: 10px;
}

.div-table-col-control-left {
    width: 40px;  
	padding-right: 10px;
	padding-top: 6px;
}

.div-table-col-border-right {
	padding-right: 5px;
}

.div-table-col-text-right {
    width: 73px;  
	padding-left: 10px;
}

.div-table-col-control-right {
    width: 40px;  
	padding-left: 10px;
	padding-top: 6px;
}

.div-table-col-slider {
    width: 30px;  
 	padding-right: 10px;
}

.div-table-col-left {
    width: 50px;      */   
    padding-left: 5px;
	padding-right: 5px;
	padding-top: 5px;
}

.div-table-col.pins {
	padding-left: 0px !important;
	padding-right: 0px !important;
	padding-top: 0px !important;
	width: 30px !important;
	background-color: var(--ColorBackground);
}

.pins {
	padding-left: 0px !important;
	padding-right: 0px !important;
	padding-top: 0px !important;
	width: 30px !important;
	height: 30px !important;
}
.text {
	color: var(--ColorText);
	text-shadow: 1px 1px 0 var(--ColorBackground), -1px 1px 0 var(--ColorBackground), -1px -1px 0 var(--ColorBackground), 1px -1px 0 var(--ColorBackground);
}

.textPurple {
	color: var(--ColorPurple);
}

.textPurpleDisabled {
	color: var(--ColorPurpleDisabled);
}

.textPink {
	color: var(--ColorPink);
}

.textPinkDisabled {
	color: var(--ColorPinkDisabled);
}

.textYellow {
	color: var(--ColorReservedYellow);
}

.textYellowDisabled {
	color: var(--ColorYellowDisabled);
}

.textBlack {
	color: var(--ColorReservedBlack);
}

.textBlackDisabled {
	color: var(--ColorBlackDisabled);
}

.textOrange {
	color: var(--ColorReservedOrange);
}

.textOrangeDisabled {
	color: var(--ColorOrangeDisabled);
}

.textBlue {
	color: var(--ColorBlue);
}

.textBlueDisabled {
	color: var(--ColorBlueDisabled);
}

.textRed {
	color: var(--ColorReservedRed);
}

.textRedDisabled {
	color: var(--ColorRedDisabled);
}

.textGreen {
	color: var(--ColorGreen);
}

.textGreenDisabled {
	color: var(--ColorGreenDisabled);
}

.text-cell {
	padding: 0px;
	display: block;
	height: 25px;
}

.text-main {
	font-weight: bold;
	font-size: 14px;
	height: 15px;
	padding-top: 0px;
}

.text-main-single {
	font-weight: bold;
	font-size: 14px;
	height: 25px;
	padding-top: 3px;
}

.text-sub {
	font-size: 8px;
	height: 10px;
	padding-top: 1px;
}
.text-small {
	font-size: 7px !important;
}

.text-function-power-3 {
	color: var(--ColorTextFunctionPower3) !important;
}

.text-function-power-5 {
	color: var(--ColorTextFunctionPower5) !important;
}

.text-function-ground {
	color: var(--ColorTextFunctionGround) !important;
}


.text-function-eeprom {
	color: var(--ColorTextFunctionEEPROM) !important;
}

.text-back {
	padding: 15px;
	font-weight: bold;
	font-size: 20px;
}

a {
	text-decoration:none;
}

a:hover {
	text-decoration:none;
}

.start-page-subtitle {
	font-weight: bold;
	padding-top: 20px;
	padding-left: 15px;
}

.start-page-row {
	padding-top: 15px;
	padding-left: 5px;
	padding-right: 5px;
	padding-bottom: 10px;
	display: flex;
}

.start-page-col {
    float: left; /* fix for  buggy browsers */
    height: auto !important;
	padding-top: 5px;
}

.start-page-button-cell-container {
	position: relative;
    height: auto;
}
.start-page-button-cell {
	padding-right: 15px;
	width: 100px;
	height: 100%;
}

.start-page-description-cell {
	padding-left: 15px;
	width: auto;
	font-size: 16px;
}


.content {
	display: none;
}

.content-container {
	display: flex;
    align-items: center;
    justify-content: center;
}

.title-logo {
	display: flex;
	height: 30px;
	width: 30px;
	position: absolute;
}
.title-logo-disabled {
	display: flex;
	height: 0px;
	width: 0px;
	position: absolute;
}

.title-text-with-logo {
	margin-left: 40px;
    padding-top: 5px;
}

.title-container {
	position: relative;
}


.page-bgimage {
	position: absolute;
	height: 100%;
	width: 100%;
	z-index: -4;
}
.arrow-button {
    display: flex;
    color: var(--ColorWhite);
    background-color: var(--ColorDefaultButton);
    padding: 6px 8px;
    border-radius: 5px;
    transition: all .3s ease;
    font-weight: bold;
    cursor: pointer;
    align-items: center;
    font-size: 14px;
	border: 1px solid var(--ColorDefaultButtonHoover);
	text-decoration: none;
}

.arrow-button > .arrow {
    width: 6px;
    height: 6px;
    border-right: 2px solid var(--ColorWhite);
    border-bottom: 2px solid var(--ColorWhite);
    position: relative;
    transform: rotate(135deg);
    margin: 0 6px;
    transition: all .3s ease;
}

.arrow-button > .arrow::before {
    display: block;
    background-color: currentColor;
    width: 3px;
    transform-origin: bottom right;
    height: 2px;
    position: absolute;
    opacity: 0;
    bottom: calc(-2px / 2);
    transform: rotate(45deg);
    transition: all .3s ease;
    content: "";
    right: 0;
}

.arrow-button:hover > .arrow {
    transform: rotate(135deg) translate(4px, 4px);
    border-color: text-hover-color;
}

.arrow-button:hover > .arrow::before {
    opacity: 1;
    width: 8px;
}

.arrow-button:hover {
    background-color: var(--ColorDefaultButtonHoover);
    color: var(--ColorDefaultButtonHooverText);
}

.start-page-header {
	height: 60px;
}
.start-page-subtitle-header {
	height: 40px;
}

.header {
	height: 20px;
}
.SiteContent {
	height: 100%;
	width: 100%;
}

.bgimage-gpio {
	min-height: 678px !important;
}

.bgimage {
	background-color: var(--ColorBackground);
	display: flex;
    position: relative; 
	min-height: var(--ImageBGMinHeight);
    width: 100%;
	height: 100%;
    display: flex;
    align-items: center;
    justify-content: center;
	z-index: -4;
}
.bgimage::before {    
    content: "";
    background-image: var(--ImageBG);
	background-repeat: no-repeat;
	background-attachment: fixed;
	background-position: center;
    position: absolute;
    top: 0px;
    right: 0px;
    bottom: 0px;
    left: 0px;
    opacity: var(--ImageBGOpacity);
	z-index: -4;
	display: flex;
}

.bgimage-blur {
	-webkit-filter: blur(3px);
	-moz-filter: blur(3px);
	-o-filter: blur(3px);
	-ms-filter: blur(3px);
	filter: blur(3px);
}

.start-page-container {
	position: absolute;
	width: 100%;
    top: 0px;
    left: 0px;
	padding: 10px;

}

.gpio-page-container {
	position: absolute;
	width: 100%;
    display:flex;
	justify-content: center;
	top: 0px;
}

.loading {
	min-height: 256px;
	min-width: 256px;
	height: 100%;
	width: 100%;
	background-image: var(--ImageLoading);
	background-repeat: no-repeat;
	background-attachment: fixed;
	background-position: center;
	position: absolute;
	padding: 0px;
	margin: 0px;
}

.showTemperature {
	position: fixed;
	bottom: 25px;
	left: 25px;
	font-size: 13px;
	box-shadow: 1px 1px 5px 5px rgb(from var(--ColorBackground) r g b / 0.3), -1px 1px 5px 5px rgb(from var(--ColorBackground) r g b / 0.3), -1px -1px 5px 5px rgb(from var(--ColorBackground) r g b / 0.3), 1px -1px 5px 5px rgb(from var(--ColorBackground) r g b / 0.3);
	background-color: rgb(from var(--ColorBackground) r g b / 0.75);

}

.showTemperatureHide {
	display: none;
}